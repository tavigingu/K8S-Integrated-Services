apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
  namespace: default
data:
  PORT: "8080"
---
apiVersion: v1
kind: Secret
metadata:
  name: backend-secrets
  namespace: default
type: Opaque
stringData:
  AZURE_BLOB_ACCOUNT_NAME: aiproiectstorage
  AZURE_BLOB_ACCOUNT_KEY: lkGR2Ge3nyM37LTayu+/UPxl/hujO7alwqCasw/u9o03eKt7olW3fnnzCX4mstJCYAjV0FhiH0td+AStnEn5PA==
  AZURE_BLOB_CONTAINER_NAME: storage-container
  AZURE_SQL_SERVER_NAME: text-processing-server
  AZURE_SQL_DB_NAME: text-processing-db
  AZURE_SQL_USERNAME: admindb
  AZURE_SQL_PASSWORD: 30februariE
  AZURE_COGNITIVE_SERVICES_ENDPOINT: https://entityextraction.cognitiveservices.azure.com
  AZURE_COGNITIVE_SERVICES_KEY: 5oH9mN96M5AfcrAEd3qugKsGF8H1ARyAmWFpQIMGoyanZOLtX2xB0JQQJ99BDACPV0roXJ3w3AAAaACOGm4f4
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: chat-backend-config
  namespace: default
data:
  MONGO_URI: "mongodb://mongodb-service:27017/chatdb"
  DB_NAME: "chatdb"
  SERVER_PORT: "8080"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodb-pvc
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: hostpath
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: chat-frontend-config
  namespace: default
data:
  config.json: |
    {
      "production": false,
      "apiUrl": "http://localhost:30090/api",
      "wsUrl": "ws://localhost:30090/ws"
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: joomla-config
data:
  ANGULAR_CHAT_FRONTEND_URL: "http://4.180.171.10:30090"
  ANGULAR_AI_FRONTEND_URL: "http://4.180.171.10:30098"
---
apiVersion: v1
kind: Secret
metadata:
  name: db-credentials
type: Opaque
data:
  MYSQL_ROOT_PASSWORD: cm9vdA==
  MYSQL_PASSWORD: am9vbWxhX3Bhc3M=
  MYSQL_USER: am9vbWxhX3VzZXI=
  MYSQL_DATABASE: am9vbWxhX2Ri
  MYSQL_DATABASE_HOST: ZGI=
---
apiVersion: v1
kind: Service
metadata:
  name: text-backend
  namespace: default
spec:
  selector:
    app: text-backend
  ports:
    - port: 99
      targetPort: 99
      protocol: TCP
      name: http
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: text-frontend-service
  namespace: default
spec:
  selector:
    app: text-frontend
  ports:
    - port: 98
      targetPort: 98
      nodePort: 30098
      protocol: TCP
      name: http
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: chat-backend
  namespace: default
spec:
  selector:
    app: chat-backend
  ports:
    - port: 8080
      targetPort: 88
      protocol: TCP
      name: http-websocket
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
  namespace: default
spec:
  selector:
    app: mongodb
  ports:
    - port: 27017
      targetPort: 27017
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: chat-frontend-service
  namespace: default
spec:
  selector:
    app: chat-frontend
  ports:
    - port: 90
      targetPort: 90
      nodePort: 30090
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: joomla-service
spec:
  selector:
    app: joomla
  ports:
  - port: 8089
    targetPort: 80
    nodePort: 30085 
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: db
spec:
  selector:
    app: mysql
  ports:
  - port: 3306
    targetPort: 3306
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: text-backend
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: text-backend
  template:
    metadata:
      labels:
        app: text-backend
    spec:
      containers:
        - name: text-backend
          image: tavigingu/text-backend:v14
          ports:
            - containerPort: 99
          env:
            - name: AZURE_BLOB_ACCOUNT_NAME
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: AZURE_BLOB_ACCOUNT_NAME
            - name: AZURE_BLOB_ACCOUNT_KEY
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: AZURE_BLOB_ACCOUNT_KEY
            - name: AZURE_BLOB_CONTAINER_NAME
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: AZURE_BLOB_CONTAINER_NAME
            - name: AZURE_SQL_SERVER_NAME
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: AZURE_SQL_SERVER_NAME
            - name: AZURE_SQL_DB_NAME
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: AZURE_SQL_DB_NAME
            - name: AZURE_SQL_USERNAME
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: AZURE_SQL_USERNAME
            - name: AZURE_SQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: AZURE_SQL_PASSWORD
            - name: AZURE_COGNITIVE_SERVICES_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: AZURE_COGNITIVE_SERVICES_ENDPOINT
            - name: AZURE_COGNITIVE_SERVICES_KEY
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: AZURE_COGNITIVE_SERVICES_KEY
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: PORT
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: text-frontend
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: text-frontend
  template:
    metadata:
      labels:
        app: text-frontend
    spec:
      containers:
        - name: text-frontend
          image: tavigingu/text-frontend:v18
          ports:
            - containerPort: 98
          # env:
          #   - name: API_URL
          #     value: "http://text-backend:99/api" # Point to backend service
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chat-backend
  namespace: default
spec:
  replicas: 6
  selector:
    matchLabels:
      app: chat-backend
  template:
    metadata:
      labels:
        app: chat-backend
    spec:
      containers:
        - name: chat-backend
          image: tavigingu/chat-backend:v1
          ports:
            - containerPort: 8080
          env:
            - name: MONGO_URI
              valueFrom:
                configMapKeyRef:
                  name: chat-backend-config
                  key: MONGO_URI
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: chat-backend-config
                  key: DB_NAME
            - name: SERVER_PORT
              valueFrom:
                configMapKeyRef:
                  name: chat-backend-config
                  key: SERVER_PORT
          resources:
            requests:
              memory: "128Mi"
              cpu: "500m"
            limits:
              memory: "256Mi"
              cpu: "1000m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
        - name: mongodb
          image: mongo:latest
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_DATABASE
              value: "chatdb"
          volumeMounts:
            - name: mongodb-data
              mountPath: /data/db
      volumes:
        - name: mongodb-data
          persistentVolumeClaim:
            claimName: mongodb-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chat-frontend
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chat-frontend
  template:
    metadata:
      labels:
        app: chat-frontend
    spec:
      containers:
        - name: chat-frontend
          image: tavigingu/chat-frontend:v7
          ports:
            - containerPort: 90
      #     volumeMounts:
      #       - name: config-volume
      #         mountPath: /usr/share/nginx/html/config
      # volumes:
      #   - name: config-volume
      #     configMap:
      #       name: chat-frontend-config
      #       items:
      #         - key: config.json
      #           path: config.json
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  labels:
    app: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  strategy:
    #Recreate înseamnă că toate podurile existente vor fi terminate înainte de crearea unora noi.
    #Aceasta este importantă pentru MySQL, deoarece previne problemele de acces simultan la baza de date.
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: tavigingu/mysql-joomla:latest
          #variabilele de mediu sunt folosite pentru a configura MySQL
          #acestea sunt luate dintr-un secret Kubernetes
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: MYSQL_ROOT_PASSWORD
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: MYSQL_DATABASE
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: MYSQL_USER
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: MYSQL_PASSWORD

# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: mysql
# spec:
#   selector:
#     matchLabels:
#       app: mysql
#   template:
#     metadata:
#       labels:
#         app: mysql
#     spec:
#       containers:
#       - name: mysql
#         image: tavigingu/mysql-db:v1.0
#         ports:
#            - containerPort: 3306
#         env:
#           - name: MYSQL_ROOT_PASSWORD
#             value: "root_pass"
#           - name: MYSQL_USER
#             value: "joomla_user"
#           - name: MYSQL_PASSWORD
#             value: "joomla_pass"
#           - name: MYSQL_DATABASE
#            value: "joomla_db"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: joomla
  labels:
    app: joomla
spec:
  replicas: 3
  selector:
    matchLabels:
      app: joomla
  template:
    metadata:
      labels:
        app: joomla
    spec:
      containers:
        - name: joomla
          image: tavigingu/joomla:latest
          ports:
            - containerPort: 80
          lifecycle:
            postStart:
              exec:
                command:
                  [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /var/www/html/tmp/regularlabs/custom_php && chown -R www-data:www-data /var/www/html/tmp && chmod -R 755 /var/www/html/tmp",
                  ]
          env:
            - name: ANGULAR_CHAT_FRONTEND_URL
              valueFrom:
                configMapKeyRef:
                  name: joomla-config
                  key: ANGULAR_CHAT_FRONTEND_URL

            - name: ANGULAR_AI_FRONTEND_URL
              valueFrom:
                configMapKeyRef:
                  name: joomla-config
                  key: ANGULAR_AI_FRONTEND_URL

            - name: JOOMLA_DB_HOST
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: MYSQL_DATABASE_HOST

            - name: JOOMLA_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: MYSQL_PASSWORD

            - name: JOOMLA_DB_USER
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: MYSQL_USER

            - name: JOOMLA_DB_NAME
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: MYSQL_DATABASE

            - name: JOOMLA_DB_TYPE
              value: "mysqli"

