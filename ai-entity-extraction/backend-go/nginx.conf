server { listen 99; server_name localhost;
location / {
    proxy_pass http://localhost:8080;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
}
}

# # ============================================
# # Nginx Reverse Proxy Configuration
# # ============================================

# worker_processes auto;
# error_log /var/log/nginx/error.log debug;
# pid /var/run/nginx.pid;

# events {
#     worker_connections 1024;
# }

# http {
#     include /etc/nginx/mime.types;
#     default_type application/octet-stream;

#     # Configurare loguri
#     log_format combined '$remote_addr - $remote_user [$time_local] '
#                         '"$request" $status $body_bytes_sent '
#                         '"$http_referer" "$http_user_agent"';
#     access_log /var/log/nginx/access.log combined;

#     # Setări pentru performanță
#     sendfile on;
#     keepalive_timeout 60;
#     keepalive_requests 100;

#     server {
#         listen 99;
#         server_name localhost;

#         # Loguri specifice serverului
#         error_log /var/log/nginx/error.log debug;
#         access_log /var/log/nginx/access.log combined;

#         # Headere CORS
#         add_header Access-Control-Allow-Origin "*" always;
#         add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
#         add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;

#         # Gestionare cereri OPTIONS (preflight)
#         if ($request_method = 'OPTIONS') {
#             add_header Access-Control-Allow-Origin "*";
#             add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
#             add_header Access-Control-Allow-Headers "Content-Type, Authorization";
#             add_header Content-Length 0;
#             return 204;
#         }

#         # Reverse proxy către backend (HTTP + WebSocket)
#         location / {
#             proxy_pass http://localhost:8080/;
#             proxy_http_version 1.1;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;

#             # Suport WebSocket
#             proxy_set_header Upgrade $http_upgrade;
#             proxy_set_header Connection "upgrade";

#             # Timeout-uri
#             proxy_connect_timeout 300s;
#             proxy_send_timeout 300s;
#             proxy_read_timeout 300s;
#         }
#     }
# }
